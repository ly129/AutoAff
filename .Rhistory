# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA))
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index)
aff.style <- function(first, last, degree, index, latex = FALSE) {
if (!latex) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
}
} else {
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], "\textsuperscript", index[i], ";", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA))
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
aff.style <- function(first, last, degree, index, latex = FALSE) {
if (!latex) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
}
} else {
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], "\\textsuperscript{", index[i], "};", sep = "" )
}
}
}
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
if (!latex) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
}
} else {
for (i in 1:length(first)) {
cat(first[i], " ", last[i], ", ", degree[i], "\\textsuperscript{", index[i], "};", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA))
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "\\textsuperscript{", index[i], "};", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA))
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], ";", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^;", sep = "" )
}
}
}
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
setwd("~/RandomTests/AutoAff")
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], "; ", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^; ", sep = "" )
}
}
}
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- read.csv("Book1.csv", na.strings = c("", NA)) # Give full path name
data <- read.csv("Book1.csv", na.strings = c("", NA)) # Give full path name
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], "; ", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^; ", sep = "" )
}
}
}
AutoAff
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:dim(X)[1]) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], "; ", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^; ", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA)) # Give full path name
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = F)
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
dim(data)
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
data[, "index"] <- mat[, 4]
for (i in 1:n.aff) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, data = data))
}
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], "; ", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^; ", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA)) # Give full path name
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data <- result$data
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
matrix(data = 1:12, nrow = 3, byrow = T)
matrix(1:12, 3, T)
matrix(1:12, 3,byrow = T)
AutoAff <- function(X, aff1, aff2, aff3, name) {
mat <- as.matrix(X[, c(aff1, aff2, aff3)])
aff <- na.exclude(unique(as.character(as.vector(t(mat)))))
n.aff <- length(aff)
aff <- aff[1:n.aff]
mat <- cbind(mat, rep(NA, dim(X)[1]))
for (i in 1:dim(X)[1]) {
aa <- which(aff == mat[i, 1])
bb <- which(aff == mat[i, 2])
cc <- which(aff == mat[i, 3])
if (length(aa) == 0) {
mat[i, 1] <- mat[i, 2] <- mat[i, 3] <- mat[i, 4] <- ""
} else {
if (length(bb) != 0){
if (length(cc) == 0) {
mat[i, 1] <- aff[min(c(aa, bb))]
mat[i, 2] <- aff[max(c(aa, bb))]
mat[i, 4] <- paste(min(c(aa, bb)), ",", max(c(aa, bb)), sep = "")
}
if (length(cc) != 0) {
order <- sort(c(aa, bb, cc))
mat[i, 1] <- aff[order[1]]
mat[i, 2] <- aff[order[2]]
mat[i, 3] <- aff[order[3]]
if (order[2] - order[1] == 1 & order[3] - order[2] == 1) {
mat[i, 4] <- paste(order[1], "-", order[3], sep = "")
} else {
mat[i, 4] <- paste(order[1],",", order[2], ",", order[3], sep = "")
}
}
} else {
mat[i, 4] <- paste(aa)
}
}
}
# data[, "a"] <- mat[, 1]
# data[, "b"] <- mat[, 2]
# data[, "c"] <- mat[, 3]
# data[, "names"] <- data$LAST.NAME
index <- mat[, 4]
for (i in 1:n.aff) {
cat(i," ", aff[i], "; " , sep = "")
}
return(list(affilliations = aff, count = n.aff, index = index))
}
# change the inputs and the cat() commands according to your need
# ?cat
# If superscripted indices are needed
# set latex = TRUE and copy-paste the output to R markdown and knit to MS Word.
aff.style <- function(first, last, degree, index, latex = FALSE) {
first <- as.character(first)
last <- as.character(last)
degree <- as.character(degree)
index <- as.character(index)
for (i in 1:length(first)) {
if (!latex) {
cat(first[i], " ", last[i], ", ", degree[i], index[i], "; ", sep = "" )
} else {
cat(first[i], " ", last[i], ", ", degree[i], "^", index[i], "^; ", sep = "" )
}
}
}
data <- read.csv("Book1.csv", na.strings = c("", NA)) # Give full path name
result <- AutoAff(data, "AFFILIATION.1", "AFFILIATION.2", "AFFILIATION.3", "LAST.NAME")
data$index <- result$index
aff.style(first = data$FIRST.NAME,last = data$LAST.NAME, degree = data$DEGREES, index = data$index, latex = T)
